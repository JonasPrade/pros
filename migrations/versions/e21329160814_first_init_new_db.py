"""first init new db

Revision ID: e21329160814
Revises: 
Create Date: 2022-04-22 14:53:54.077608

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision = 'e21329160814'
down_revision = None
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()


def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklist_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('project_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('superior_project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['superior_project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('railway_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mifcode', sa.String(length=30), nullable=True),
    sa.Column('streckennummer', sa.Integer(), nullable=True),
    sa.Column('direction', sa.Integer(), nullable=True),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('from_km', sa.Integer(), nullable=True),
    sa.Column('to_km', sa.Integer(), nullable=True),
    sa.Column('electrified', sa.String(length=20), nullable=True),
    sa.Column('number_tracks', sa.Integer(), nullable=True),
    sa.Column('vmax', sa.String(length=20), nullable=True),
    sa.Column('type_of_transport', sa.String(length=20), nullable=True),
    sa.Column('coordinates', geoalchemy2.types.Geometry(srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('railway_points',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mifcode', sa.Integer(), nullable=True),
    sa.Column('bezeichnung', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.Column('db_kuerzel', sa.String(length=5), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('text_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('project_to_group',
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('projectgroup_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['projectgroup_id'], ['project_groups.id'], )
    )
    op.create_table('projects_contents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('project_number', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('nkv', sa.Integer(), nullable=True),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('priority', sa.String(length=100), nullable=True),
    sa.Column('nbs', sa.Boolean(), nullable=False),
    sa.Column('elektrification', sa.Boolean(), nullable=False),
    sa.Column('second_track', sa.Boolean(), nullable=False),
    sa.Column('third_track', sa.Boolean(), nullable=False),
    sa.Column('fourth_track', sa.Boolean(), nullable=False),
    sa.Column('curve', sa.Boolean(), nullable=False),
    sa.Column('platform', sa.Boolean(), nullable=False),
    sa.Column('junction_station', sa.Boolean(), nullable=False),
    sa.Column('number_junction_station', sa.Integer(), nullable=True),
    sa.Column('overtaking_station', sa.Boolean(), nullable=False),
    sa.Column('number_overtaking_station', sa.Integer(), nullable=True),
    sa.Column('double_occupancy', sa.Boolean(), nullable=False),
    sa.Column('block_increase', sa.Boolean(), nullable=False),
    sa.Column('flying_junction', sa.Boolean(), nullable=False),
    sa.Column('tunnel_structural_gauge', sa.Boolean(), nullable=False),
    sa.Column('increase_speed', sa.Boolean(), nullable=False),
    sa.Column('new_vmax', sa.Integer(), nullable=True),
    sa.Column('level_free_platform_entrance', sa.Boolean(), nullable=False),
    sa.Column('lfd_nr', sa.Integer(), nullable=True),
    sa.Column('finve_nr', sa.Integer(), nullable=True),
    sa.Column('bedarfsplan_nr', sa.Integer(), nullable=True),
    sa.Column('planned_total_cost', sa.Integer(), nullable=True),
    sa.Column('actual_cost', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects_to_lines',
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('railway_lines_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['railway_lines_id'], ['railway_lines.id'], )
    )
    op.create_table('projects_to_points',
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('railway_point_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['railway_point_id'], ['railway_points.id'], )
    )
    op.create_table('texts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['type'], ['text_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('budgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_content_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('spent_cost_two_years_before', sa.Integer(), nullable=True),
    sa.Column('allowed_year_before', sa.Integer(), nullable=True),
    sa.Column('delegated_costs', sa.Integer(), nullable=True),
    sa.Column('planned_cost_this_year', sa.Integer(), nullable=True),
    sa.Column('planned_cost_next_year', sa.Integer(), nullable=True),
    sa.Column('planned_cost_following_years', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_content_id'], ['projects_contents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('texts_to_projects',
    sa.Column('project_content_id', sa.Integer(), nullable=True),
    sa.Column('text.id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_content_id'], ['projects_contents.id'], ),
    sa.ForeignKeyConstraint(['text.id'], ['texts.id'], )
    )
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('texts_to_projects')
    op.drop_table('budgets')
    op.drop_table('texts')
    op.drop_table('projects_to_points')
    op.drop_table('projects_to_lines')
    op.drop_table('projects_contents')
    op.drop_table('project_to_group')
    op.drop_table('user')
    op.drop_table('text_types')
    op.drop_table('railway_points')
    op.drop_table('railway_lines')
    op.drop_table('projects')
    op.drop_table('project_groups')
    op.drop_table('blacklist_tokens')
    # ### end Alembic commands ###


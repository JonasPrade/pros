"""empty message

Revision ID: fed23c93b1e0
Revises: 97fd3c9f5aeb
Create Date: 2023-04-09 15:40:00.877974

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fed23c93b1e0'
down_revision = '97fd3c9f5aeb'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('spatial_ref_sys')
    op.add_column('master_scenarios', sa.Column('count_area_sum', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('count_area_diesel', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('count_area_efuel', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('count_area_h2', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('count_area_battery', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('count_area_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('count_area_optimised_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('count_area_oe_to_battery', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('count_area_oe_to_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('running_km_sum', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('running_km_diesel', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('running_km_efuel', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('running_km_h2', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('running_km_battery', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('running_km_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('running_km_optimised_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('running_km_oe_to_battery', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('running_km_oe_to_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('infrastructure_cost_sum', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('infrastructure_cost_diesel', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('infrastructure_cost_efuel', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('infrastructure_cost_h2', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('infrastructure_cost_battery', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('infrastructure_cost_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('infrastructure_cost_optimsed_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('infrastructure_cost_oe_to_battery', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('infrastructure_cost_oe_to_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('operating_cost_sum', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('operating_cost_diesel', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('operating_cost_efuel', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('operating_cost_h2', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('operating_cost_battery', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('operating_cost_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('operating_cost_optimised_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('operating_cost_oe_to_battery', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('operating_cost_oe_to_electrification', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('co2_new', sa.Integer(), nullable=True))
    op.add_column('master_scenarios', sa.Column('co2_diesel', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('master_scenarios', 'co2_diesel')
    op.drop_column('master_scenarios', 'co2_new')
    op.drop_column('master_scenarios', 'operating_cost_oe_to_electrification')
    op.drop_column('master_scenarios', 'operating_cost_oe_to_battery')
    op.drop_column('master_scenarios', 'operating_cost_optimised_electrification')
    op.drop_column('master_scenarios', 'operating_cost_electrification')
    op.drop_column('master_scenarios', 'operating_cost_battery')
    op.drop_column('master_scenarios', 'operating_cost_h2')
    op.drop_column('master_scenarios', 'operating_cost_efuel')
    op.drop_column('master_scenarios', 'operating_cost_diesel')
    op.drop_column('master_scenarios', 'operating_cost_sum')
    op.drop_column('master_scenarios', 'infrastructure_cost_oe_to_electrification')
    op.drop_column('master_scenarios', 'infrastructure_cost_oe_to_battery')
    op.drop_column('master_scenarios', 'infrastructure_cost_optimsed_electrification')
    op.drop_column('master_scenarios', 'infrastructure_cost_electrification')
    op.drop_column('master_scenarios', 'infrastructure_cost_battery')
    op.drop_column('master_scenarios', 'infrastructure_cost_h2')
    op.drop_column('master_scenarios', 'infrastructure_cost_efuel')
    op.drop_column('master_scenarios', 'infrastructure_cost_diesel')
    op.drop_column('master_scenarios', 'infrastructure_cost_sum')
    op.drop_column('master_scenarios', 'running_km_oe_to_electrification')
    op.drop_column('master_scenarios', 'running_km_oe_to_battery')
    op.drop_column('master_scenarios', 'running_km_optimised_electrification')
    op.drop_column('master_scenarios', 'running_km_electrification')
    op.drop_column('master_scenarios', 'running_km_battery')
    op.drop_column('master_scenarios', 'running_km_h2')
    op.drop_column('master_scenarios', 'running_km_efuel')
    op.drop_column('master_scenarios', 'running_km_diesel')
    op.drop_column('master_scenarios', 'running_km_sum')
    op.drop_column('master_scenarios', 'count_area_oe_to_electrification')
    op.drop_column('master_scenarios', 'count_area_oe_to_battery')
    op.drop_column('master_scenarios', 'count_area_optimised_electrification')
    op.drop_column('master_scenarios', 'count_area_electrification')
    op.drop_column('master_scenarios', 'count_area_battery')
    op.drop_column('master_scenarios', 'count_area_h2')
    op.drop_column('master_scenarios', 'count_area_efuel')
    op.drop_column('master_scenarios', 'count_area_diesel')
    op.drop_column('master_scenarios', 'count_area_sum')
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    # ### end Alembic commands ###

